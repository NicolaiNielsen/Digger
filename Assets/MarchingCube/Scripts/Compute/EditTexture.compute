#pragma kernel CSMain

RWTexture3D<float> EditTexture;
int3 textureSize;
int3 brushCentre;
int brushRadius;
float deltaTime;
float weight;

// return smooth value between 0 and 1 (0 when t = minVal, 1 when t = maxVal)
float smoothstep(float minVal, float maxVal, float t) {
    t = saturate((t-minVal) / (maxVal - minVal));
    return t * t * (3 - 2 * t);
}

[numthreads(8,8,8)]
void CSMain (int3 id : SV_DispatchThreadID)
{
    // Bounds check for non-cubic textures
    if (id.x < 0 || id.x >= textureSize.x ||
        id.y < 0 || id.y >= textureSize.y ||
        id.z < 0 || id.z >= textureSize.z) {
        return;
    }

    int3 offset = id - brushCentre;
    int sqrDst = dot(offset, offset);

    if (sqrDst <= brushRadius * brushRadius) {
        float dst = sqrt((float)sqrDst);
        float brushWeight = 1 - smoothstep(brushRadius * 0.7, brushRadius, dst);
        EditTexture[id] += weight * deltaTime * brushWeight;
    }
}
